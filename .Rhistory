type="csv",
replace=TRUE)
experiments_stream <- fac.design (
nfactors=4,
replications=30,
repeat.only=FALSE,
randomize=TRUE,
seed=10373,
blocks = 1,
nlevels=c(4, 11, 4, 6),
factor.names=list(
latency=c("Spark", "Flink", "Storm", "Gearpump"),
app=c("Sort", "Sleep", "Terasort", "Wordcount", "Bayes", "Kmeans",
"Scan", "Join", "Aggregation", "Nutch", "PageRank"),
scenario=c("4-4", "5-3", "6-2", "7-1"),
workload=c("Tiny", "Small", "Large", "Huge", "Gigantic", "BigData")))
export.design(experiments_stream, NULL,
path="/home/souza/jorge",
filename=NULL,
type="csv",
replace=TRUE)
---
title: "pmweb_challenge"
source('~/Documents/pmweb/generator.r')
knitr::opts_chunk$set(echo = TRUE)
csvFiles <- list.files(path=filesPath, pattern = "*.csv", full.names = T, recursive = FALSE)
setwd("~/")
setwd("~/Documents/pmweb")
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
csvFiles <- list.files(path=filesPath, pattern = "*.csv", full.names = T, recursive = FALSE)
csvFiles <- list.files(pattern = "*.csv", full.names = T, recursive = FALSE)
csvFiles <- list.files(pattern = "acidentes*", full.names = T, recursive = FALSE)
csvFiles
csvFiles <- list.files(pattern = "acidentes*.csv", full.names = T, recursive = FALSE)
csvFiles <- list.files(pattern = "acidentes*", full.names = T, recursive = FALSE)
csvFiles <- list.files(pattern = "acidentes-*", full.names = T, recursive = FALSE)
csvFiles
csvFiles <- list.files(pattern = "acidentes-*")
csvFiles <- list.files(pattern = "acidentes-*")
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
csvs <- list.files(pattern = "acidentes-*")
csvs
csvFiles <- list.files(pattern = "acidentes-*")
csvFi
csvFiles
csvFiles <- list.files(pattern = "acidentes-*")[-1]
csvFiles
csvFiles <- list.files(pattern = "acidentes-*")
csvFiles
csvFiles <- list.files(pattern = "acidentes-*.csv")
csvFiles <- list.files(pattern = "acidentes-2*")
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
csvFiles <- list.files(pattern = "acidentes-2*")
csvFiles
cbind(file=f, read.csv(f, header = TRUE, sep = ";"))
acidentes <- do.call(rbind, # Read the data and combine into single data frame
lapply(fNames,
function(f){
cbind(file=f, read.csv(f, header = TRUE, sep = ";"))
}))
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
acidentes <- do.call(rbind, # Read the data and combine into single data frame
lapply(fNames,
function(f){
cbind(file=f, read.csv(f, header = TRUE, sep = ";"))
}))
fNames <- list.files(pattern = "acidentes-2*")
acidentes <- do.call(rbind, # Read the data and combine into single data frame
lapply(fNames,
function(f){
cbind(file=f, read.csv(f, header = TRUE, sep = ";"))
}))
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
fNames <- list.files(pattern = "acidentes-2*")
acidentes <- lapply(fNames, function(fNames){
data.frame(read.csv(fNames, header=TRUE, sep=" "))
})
data.frame(read.csv(fNames, header=TRUE, sep=";"))
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
fNames <- list.files(pattern = "acidentes-2*")
acidentes <- lapply(fNames, function(fNames){
data.frame(read.csv(fNames, header=TRUE, sep=";"))
})
View(acidentes)
acidentes
acidentes[[1]]
test < - data.frame(acidentes[[1]])
test <- data.frame(acidentes[[1]])
View(test)
test <- select(test, test$DATA_HORA, test$TEMPO, test$UPS)
require("dplyr")
test <- select(test, test$DATA_HORA, test$TEMPO, test$UPS)
test <- select(test, DATA_HORA, TEMPO, UPS)
View(test)
ggplot(test, aes(TEMPO))
require("ggplot")
require("ggplot2")
ggplot(test, aes(TEMPO))
ggplot(test, aes(x = DATA_HOME, y = TEMPO))
ggplot(test, aes(x = DATA_HORA, y = TEMPO))
ggplot(test, aes(x = DATA_HORA, y = UPS, colour=TEMPO))
ggplot(test, aes(x = UPS, y = DATA_HORA, colour=TEMPO))
ggplot(test, aes(x = UPS, y = DATA_HORA, colour=TEMPO)) + geom_bar()
ggplot(test, aes(x = UPS, y = DATA_HORA, colour=TEMPO)) + geom_line()
ggplot(test, aes(x = UPS, y = DATA_HORA, fill=TEMPO)) + geom_bar()
ggplot(test, aes(x = DATA_HORA, y = UPS, fill=TEMPO)) + geom_bar()
ggplot(test, aes(x = DATA_HORA, fill=TEMPO)) + geom_bar()
ggplot(test, aes(x = DATA_HORA, fill=TEMPO)) + goem_col()
ggplot(test, aes(x = DATA_HORA, y= TEMPO, fill=TEMPO)) + geom_col()
ggplot(test, aes(x = DATA_HORA, y= TEMPO, fill=TEMPO)) + geom_col()
ggplot(test, aes(x = DATA_HORA, y= TEMPO, fill=TEMPO)) + geom_col
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col()
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y-%m-%d %H"),
date_breaks = "8 hours")
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y-%m-%d %H"), date_breaks = "8 hours")
require(scales)
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y-%m-%d %H"), date_breaks = "8 hours")
test$DATA_HORA
test$DATA_HORA
test
ggplot(test, aes(x = as.Date(DATA_HORA), y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y%m%d %H"), date_breaks = "8 hours")
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y%m%d %H"), date_breaks = "8 hours")
as.Date("%Y%m%d %H")
as.Date("20000109 16:30", "%Y%m%d %H")
as.POSIXlt("20000109 21:30", tz = "", format,
tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE, ...)
as.POSIXlt("20000109 21:30", tz = "", format,
tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE)
as.POSIXlt("20000109 21:30", tz = "", format,
tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE)
as.POSIXlt("20000109 21:30", tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE)
as.POSIXlt("20000109 21:30", tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y%m%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE)
as.POSIXlt("20000109 21:30", tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y%m%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"),
optional = FALSE)
strptime("20000109 21:30", "%Y%m%d %H:%M")
as.POSIXct(strptime("20000109 21:30", "%Y%m%d %H:%M"))
ggplot(test, aes(x = strptime(DATA_HORA, "%Y%m%d %H:%M"), y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y%m%d %H"), date_breaks = "8 hours")
ggplot(test, aes(x = DATA_HORA, y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y%m%d %H:%M"), date_breaks = "8 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, fill=TEMPO)) + geom_col() +  scale_x_datetime(labels = date_format("%Y%m%d %H:%M"), date_breaks = "8 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%Y%m%d %H:%M"), date_breaks = "8 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%Y%m%d %H:%M"), date_breaks = "50 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%Y%m%d %H:%M"), date_breaks = "800 hours")
as.POSIXct(strptime("20000109 21:30", "%Y%m%d %H:%M"))
as.POSIXct(strptime("20000109 21:30", "%H:%M"))
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime("", format = "%H:%M", date_breaks = "800 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime("", format = "%b", date_breaks = "800 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() + scale_x_datetime("", format = "%b") +
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() + scale_x_datetime("", format = "%b")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%H:%M"), date_breaks = "8 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%H:%M"), date_breaks = "10000 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%H:%M"), date_breaks = "1000 hours")
ggplot(test, aes(x = as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%H:%M"), date_breaks = "900 hours")
strptime(DATA_HORA, "%Y%m%d %H:%M")
strptime("20000109 21:30", "%Y%m%d %H:%M")
strptime("20000109 21:30", "%H:%M")
strptime("20000109 21:30", " %H:%M")
strptime("20000109 21:30", "%Y%m%d %H:%M")
format(as.POSIXct(strptime("20000109 21:30", "%H:%M")), format='%H:%M')
format(as.POSIXct(strptime("20000109 21:30", "%Y%m%d %H:%M")), format='%H:%M')
ggplot(test, aes(x = format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%h:%M'), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(date_breaks = "900 hours")
ggplot(test, aes(x = format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%h:%M'), y= UPS, colour=TEMPO)) + geom_jitter()
format(as.POSIXct(strptime(test$DATA_HORA, "%Y%m%d %H:%M"))
)
ggplot(test, aes(x = format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M'), y= UPS, colour=TEMPO)) + geom_jitter() +  scale_x_datetime(labels = date_format("%H:%M"), date_breaks = "900 hours")
ggplot(test, aes(x = format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M'), y= UPS, colour=TEMPO)) + geom_jitter()
format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M"))
, format='%H:%M')
format(as.POSIXct(strptime(test$DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M')
ggplot(test, aes(x = format(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M'), y= UPS, colour=TEMPO)) + geom_area()
ggplot(test, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M'), y= UPS, colour=TEMPO)) + geom_area()
format(strptime(DATA_HORA, "%Y%m%d %H:%M")), format='%H:%M')
format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M')
format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M')
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M')), y= UPS, colour=TEMPO)) + geom_area()
as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'))
format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M')
as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'))
as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area()
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "1 hour",
date_labels = "%I:%M %p")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "1 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "5 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "3 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, colour=TEMPO)) + geom_col() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y= UPS, fill=TEMPO)) + geom_col() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
test$UPS
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_bar() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_col() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_col(stat = "bin") + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_col(position = 'stack") + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_col(position = 'stack') + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_col(position = "stack") + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_bar(position = "stack") + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_area + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, fill=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
test$UPS
test[test$UPS == 13 ]
test[test$UPS == 13, ]
test[test$TEMPO == "NUBLADO", ]
test$TEMPO
test[test$TEMPO == "NAO CADAST", ]
cont(test$DATA_HORA)
(test$DATA_HORA)
test <- data.frame(acidentes[[1]])
test$ano <- 2000
test2 <- data.frame(acidentes[[1]])
test2 <- select(test, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
test3 <- rbind(test, test2)
length(test)
length(test2)
test <- data.frame(acidentes[[1]])
test$ano <- 2000
test2 <- data.frame(acidentes[[2]])
test2 <- select(test, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
length(test)
length(test2)
test <- data.frame(acidentes[[1]])
test$ano <- 2000
test2 <- select(test2, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
test3 <- rbind(test, test2)
length(test)
length(test2)
test <- data.frame(acidentes[[1]])
test <- select(test, DATA_HORA, TEMPO, UPS)
length(test)
test$ano <- 2000
length(test)
test2 <- data.frame(acidentes[[2]])
test2 <- select(test2, DATA_HORA, TEMPO, UPS)
length(test2)
test2$ano <- 2001
length(test2)
test3 <- rbind(test, test2)
ggplot(test3, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M")
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
require("dplyr")
require("ggplot2")
require(scales)
setwd("~/Documents/pmweb") #Necessário adicionar path onde os arquivos estão
fNames <- list.files(pattern = "acidentes-2*")
acidentes <- lapply(fNames, function(fNames){
data.frame(read.csv(fNames, header=TRUE, sep=";"))
})
test <- data.frame(acidentes[[1]])
test <- select(test, DATA_HORA, TEMPO, UPS)
test$ano <- 2000
test2 <- data.frame(acidentes[[2]])
test2 <- select(test2, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
test3 <- rbind(test, test2)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) + geom_point() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) +
geom_point() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = UPS, colour=TEMPO)) +
geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = as.factor(UPS), colour=TEMPO)) +
geom_jitter() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = as.factor(UPS), colour=TEMPO)) +
geom_area() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = as.factor(UPS), colour=TEMPO)) +
geom_col() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), y = as.factor(UPS), colour=TEMPO)) +
geom_tile() + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
library(plotly)
install.packages("plotly")
library(plotly)
install.packages("httr")
install.packages("curl")
install.packages("curl")
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"),
y = as.factor(UPS), fill=TEMPO)) +
geom_bar(stat = 'identity', position = 'stack')  + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
install.packages("httr")
install.packages("plotly")
aggregate(
count ~ DATA_HORA,
data=transform(test3,
DATA_HORA=format(as.POSIXct(Time,format="%H:%M:%S"), "%I %p"),
count=1),
FUN=sum
)
count ~ hour,
data=transform(test3,
hour=format(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), "%I %p"),
count=1),
FUN=sum
)
aggregate(
count ~ hour,
data=transform(test3,
hour=format(as.POSIXct(Time,format="%H:%M:%S"), "%I %p"),
count=1),
FUN=sum
)
aggregate(
count ~ hour,
data=transform(test3,
hour=format(as.POSIXct(DATA_HORA,format="%H:%M:%S"), "%I %p"),
count=1),
FUN=sum
)
aggregate(
count ~ hour,
data=transform(test3,
hour=format(as.POSIXct(DATA_HORA,format="%H:%M:%S"), "%I %p"),
count=1),
FUN=sum
)
test3$freq <- 1
test3 %>%
group_by(time = floor_date(DATA_HORA, "1 hours")) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
require(lubridate)
require(tidyverse)
test3 %>%
group_by(time = floor_date(DATA_HORA, "1 hours")) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), "1 hours")) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(ano, time = floor_date(as.POSIXct(strptime(DATA_HORA, "%Y%m%d %H:%M"), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
as.POSIXct(strptime(test3$DATA_HORA, "%Y%m%d %H:%M")
)
as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M")
as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M")
as.POSIXct(format(strptime(test$DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M")
test3 %>%
group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>%
group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours"))) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")))
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours"))
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(tta_sum = sum(freq), tta_freq = n())
test3 <- test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(tta_freq = n())
test3 <- test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(freq = n())
test <- data.frame(acidentes[[1]])
test <- select(test, DATA_HORA, TEMPO, UPS)
test$ano <- 2000
test2 <- data.frame(acidentes[[2]])
test2 <- select(test2, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
test3 <- rbind(test, test2)
test3$freq <- 1
test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(freq = n())
test3 <- test3 %>% group_by(ano, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(freq = n())
p <- plot_ly(test3, x = ~DATA_HORA, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
library(plotly)
p <- plot_ly(test3, x = ~DATA_HORA, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
p
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
p
test3
test3 <- test3 %>% group_by(ano, UPS, TEMPO, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(freq = n())
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"),
y = as.factor(UPS), fill=TEMPO)) +
geom_bar(stat = 'identity', position = 'stack')  + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
test <- data.frame(acidentes[[1]])
test <- select(test, DATA_HORA, TEMPO, UPS)
test$ano <- 2000
test2 <- data.frame(acidentes[[2]])
test2 <- select(test2, DATA_HORA, TEMPO, UPS)
test2$ano <- 2001
test3 <- rbind(test, test2)
test3$freq <- 1
test3 <- test3 %>% group_by(ano, UPS, TEMPO, time = floor_date(as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"), "1 hours")) %>%
summarise(freq = n())
ggplot(test3, aes(x = as.POSIXct(format(strptime(DATA_HORA, "%Y%m%d %H:%M"), format='%H:%M'), format="%H:%M"),
y = as.factor(UPS), fill=TEMPO)) +
geom_bar(stat = 'identity', position = 'stack')  + labs(x="Hora") + scale_x_datetime(date_breaks = "2 hour",
date_labels = "%H:%M") + facet_wrap(~ano)
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
p
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'time'),
yaxis = list(title = 'UPS'),
zaxis = list(title = 'count')))
p
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO, type = 'scatter3d', mode = 'lines',) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'time'),
yaxis = list(title = 'UPS'),
zaxis = list(title = 'count')))
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO, type = 'scatter3d', mode = 'lines') %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'time'),
yaxis = list(title = 'UPS'),
zaxis = list(title = 'count')))
p
p <- plot_ly(test3, x = ~time, y = ~as.factor(UPS), z = ~freq, color = ~TEMPO, type = 'scatter3d', mode = 'lines') %>%
layout(scene = list(xaxis = list(title = 'time'),
yaxis = list(title = 'UPS'),
zaxis = list(title = 'count')))
p
